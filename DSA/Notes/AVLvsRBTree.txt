Read about AVL vs RB Tree today.
Very interesting to go through all the lessons. 

The AVL trees are more balanced compared to Red-Black Trees, but they may cause more rotations during insertion and deletion. So if your application involves frequent insertions and deletions, then Red-Black trees should be preferred. And if the insertions and deletions are less frequent and search is a more frequent operation, then AVL tree should be preferred over the Red-Black Tree.

How does a Red-Black Tree ensure balance?
A simple example to understand balancing is, that a chain of 3 nodes is not possible in the Red-Black tree. We can try any combination of colors and see if all of them violate the Red-Black tree property. 

Interesting points about Red-Black Tree:
The black height of the red-black tree is the number of black nodes on a path from the root node to a leaf node. Leaf nodes are also counted as black nodes. So, a red-black tree of height h has black height >= h/2.
Height of a red-black tree with n nodes is h<= 2 log2(n + 1).
All leaves (NIL) are black.
The black depth of a node is defined as the number of black nodes from the root to that node i.e the number of black ancestors.